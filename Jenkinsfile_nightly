#!groovy

properties([
// H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
pipelineTriggers([cron('H 8 * * 1-5')]),
parameters([
  string(name: 'SPTRIBS_FRONTEND_URL', defaultValue: 'https://sptribs-frontend.aat.platform.hmcts.net/', description: 'The DSS URL to test against'),
  string(name: 'SPTRIBS_CASEAPI_URL', defaultValue: 'https://manage-case.aat.platform.hmcts.net/cases', description: 'The Case-API URL to test against'),
  string(name: 'FUNCTIONAL_TESTS_WORKERS',
    defaultValue: '5',
    description: 'Number of workers running functional tests'),
  ])
])

@Library("Infrastructure")
import uk.gov.hmcts.contino.AppPipelineConfig

def type = "nodejs"
def product = "sptribs"
def component = "e2e-test"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

static Map<String, Object> secret(String secretName, String envVariable) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   envVariable: envVariable
  ]
}

def secrets = [
  'sptribs-${env}'    :[
    secret('idam-ui-secret', 'IDAM_SECRET'),
    secret('idam-systemupdate-password', 'TEST_PASSWORD'),
    secret('caseworker-user', 'CASEWORKER_USERNAME'),
    secret('caseworker-password', 'CASEWORKER_PASSWORD'),
    secret('seniorCaseworker-user', 'SENIOR_CASEWORKER_USERNAME'),
    secret('seniorCaseworker-password', 'SENIOR_CASEWORKER_PASSWORD'),
    secret('hearingCentreAdmin-user', 'HEARING_CENTRE_ADMIN_USERNAME_USERNAME'),
    secret('hearingCentreAdmin-password', 'HEARING_CENTRE_ADMIN_USERNAME_PASSWORD'),
    secret('hearingCentreTeamLead-user', 'HEARING_CENTRE_TEAM_LEAD_USERNAME_USERNAME'),
    secret('hearingCentreTeamLead-password', 'HEARING_CENTRE_TEAM_LEAD_USERNAME_PASSWORD'),
    secret('judge-user', 'JUDGE_USERNAME'),
    secret('judge-password', 'JUDGE_PASSWORD'),
    secret('seniorJudge-user', 'SENIOR_JUDGE_USERNAME'),
    secret('seniorJudge-password', 'SENIOR_JUDGE_PASSWORD'),
    secret('respondent-user', 'RESPONDENT_USERNAME'),
    secret('respondent-password', 'RESPONDENT_PASSWORD'),
    secret('citizen-user', 'CITIZEN_USERNAME'),
    secret('citizen-password', 'CITIZEN_PASSWORD'),
    secret('superUser-user', 'SUPER_USER_USERNAME'),
    secret('superUser-password', 'SUPER_USER_PASSWORD'),
    secret('CaseAPIBaseURL', 'CASEAPI_BASE_URL'),
    secret('FEBaseURL', 'DSS_BASE_URL')
  ]
]

def pipelineConf = new AppPipelineConfig()
pipelineConf.vaultSecrets = secrets


withNightlyPipeline(type, product, component) {
  enableCrossBrowserTest()
  enableFortifyScan()
  enableFullFunctionalTest()
  loadVaultSecrets(secrets)
  env.SPTRIBS_CASE_API_URL = secrets.CASEAPI_BASE_URL
  env.SPTRIBS_FRONTEND_URL = secrets.DSS_BASE_URL

  enableCrossBrowserTest(60)
  enableFortifyScan()

  after('test') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'coverage/**/*'
  }

  before('crossBrowserTest') {

  }
  afterAlways('crossBrowserTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }

  afterAlways('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }

}


